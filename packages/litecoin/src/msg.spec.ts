import { MsgEncoding, GasFeeSpeed } from '@xdefi-tech/chains-core';
import BigNumber from 'bignumber.js';
import * as utils from 'coinselect/utils';

import { ChainMsg } from './msg';

describe('msg', () => {
  let mockProvider: any;

  beforeEach(() => {
    mockProvider = {
      scanUTXOs: jest.fn(() =>
        Promise.resolve([
          {
            hash: 'e08df1abc9c1618ba7fe3c3652c5911263ceb75a95dcee0424e7700ac0e63a6d',
            value: 546,
            index: 0,
            witnessUtxo: {
              value: 546,
              script: Buffer.from(
                '5120315c668cf7eea0e451ffc7f202965d66ad624fc8a2a543754ce4f640e75e4088',
                'hex'
              ),
            },
            txHex:
              '',
          },
        ])
      ),
      getNFTBalance: jest.fn(() =>
        Promise.resolve([
          {
            description: null,
            id: '20090103/e08df1abc9c1618ba7fe3c3652c5911263ceb75a95dcee0424e7700ac0e63a6di0',
            name: 'Inscription #70316307',
            owner:
              'bc1px9wxdr8ha6swg50lcleq99jav6kkyn7g52j5xa2vunmype67gzyqyq6ah7',
            symbol: '',
            isNftSpam: false,
            location:
              'e08df1abc9c1618ba7fe3c3652c5911263ceb75a95dcee0424e7700ac0e63a6d:0:0',
            contractType: 'ORDINALS',
            spamScore: 0,
          },
        ])
      ),
      getBalance: jest.fn(() =>
        Promise.resolve({
          getData: jest.fn(() =>
            Promise.resolve([
              {
                asset: {
                  chainId: 'litecoin',
                  name: 'Litecoin',
                  symbol: 'LTC',
                  icon: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/litecoin/info/logo.png',
                  native: true,
                  id: 'f164fe78-afb4-4eeb-b5c7-bca104857cda',
                  price: '443.21',
                  decimals: 8,
                },
                amount: '1000',
              },
            ])
          ),
        })
      ),
      gasFeeOptions: jest.fn(() =>
        Promise.resolve({
          high: 5500,
          low: 550,
          medium: 1100,
        })
      ),
      manifest: {
        name: 'Litecoin',
        description: '',
        rpcURL: 'https://blockstream.info',
        chainSymbol: 'LTC',
        blockExplorerURL: 'https://blockchair.com/litecoin',
        chainId: 'litecoin',
        chain: 'litecoin',
        decimals: 8,
        feeGasStep: {
          high: 1,
          medium: 1,
          low: 1,
        },
        maxGapAmount: 0.0001,
      },
    };
  });

  it('buildTx with insufficient balance should throw an error', async () => {
    const chainMsg = new ChainMsg(
      {
        from: 'ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5',
        to: 'ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5',
        amount: 1001,
      },
      mockProvider,
      MsgEncoding.object
    );

    await expect(chainMsg.buildTx()).rejects.toThrowError();
  });

  jest.setTimeout(30000);

  it('buildTx with native token', async () => {
    const chainMsg = new ChainMsg(
      {
        from: 'ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5',
        to: 'ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5',
        amount: 0.000001,
      },
      mockProvider,
      MsgEncoding.object
    );

    const response = await chainMsg.buildTx();
    expect(response.from).toBe('ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5');
    expect(response.to).toBe('ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5');
    expect(response).toHaveProperty('inputs');
    expect(response).toHaveProperty('outputs');
    expect(response).toHaveProperty('utxos');
  });

  it('getFee should return fee estimation', async () => {
    const chainMsg = new ChainMsg(
      {
        from: 'ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5',
        to: 'ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5',
        amount: 0.000001,
      },
      mockProvider,
      MsgEncoding.object
    );

    const response = await chainMsg.getFee();
    const feeOptions = await mockProvider.gasFeeOptions();

    expect(response.fee).toEqual(
      new BigNumber(feeOptions[GasFeeSpeed.medium] as number)
        .dividedBy(10 ** mockProvider.manifest.decimals)

        .toString()
    );
    expect(response.maxFee).toBeNull();
  });

  it('should return MaxAmountToSend with native token', async () => {
    const chainMsg = new ChainMsg(
      {
        from: 'ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5',
        to: 'ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5',
        amount: 0.000001,
      },
      mockProvider,
      MsgEncoding.object
    );

    const response = await chainMsg.getMaxAmountToSend();

    const feeEstimation = await chainMsg.getFee();
    const gap = chainMsg.provider.manifest?.maxGapAmount || 0;
    const newMsg = new ChainMsg(
      {
        from: 'ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5',
        to: 'ltc1qt33t2l2fa2t0plm2s3euxvewc079q89ytyjxt5',
        amount: response,
      },
      mockProvider,
      MsgEncoding.object
    );

    const { inputs, outputs } = await newMsg.buildTx();
    const txSize = utils.transactionBytes(inputs, outputs);
    expect(txSize).toEqual(119);
    expect(response).toEqual('0.00000308'); // (546 - 2 * txSize) / 10^8
  });
});
